buildscript {
	apply from: file("project_config.gradle")

	repositories {
		google()
		jcenter()
	}

	dependencies {
		classpath "com.android.tools.build:gradle:4.1.1"
	}
}

subprojects {
	repositories {
		google()
		jcenter()
	}

	def moduleAndroidApp = "com.android.build.gradle.AppPlugin"
	def moduleAndroidLib = "com.android.build.gradle.LibraryPlugin"
	def moduleJava = "org.gradle.api.plugins.JavaBasePlugin"
	project.plugins.whenPluginAdded { plugin ->
		def moduleCurrent = plugin.class.name
		if (moduleCurrent == moduleAndroidApp || moduleCurrent == moduleAndroidLib) {
			android {
				compileSdkVersion = projectConfig.compileSdkVersion
				buildToolsVersion = projectConfig.buildToolsVersion

				defaultConfig {
					if (moduleCurrent == moduleAndroidApp) {
						applicationId = projectConfig.applicationId
					}
					versionCode = projectConfig.versionCode
					versionName = projectConfig.versionName
					minSdkVersion(projectConfig.minSdkVersion)
					targetSdkVersion(projectConfig.compileSdkVersion)
				}

				signingConfigs {
					debug {
						storeFile file(rootProject.file(".keystore/debug.jks"))
						storePassword = "android"
						keyAlias = "androiddebugkey"
						keyPassword = "android"
					}
				}

				buildTypes {
					debug {
						signingConfig = signingConfigs.debug
						debuggable = true
						minifyEnabled = false
						zipAlignEnabled = false
						crunchPngs = false

						if (moduleCurrent == moduleAndroidApp) {
							shrinkResources = false
						}
					}
				}

				compileOptions {
					incremental = true
					sourceCompatibility = JavaVersion.VERSION_1_8
					targetCompatibility = JavaVersion.VERSION_1_8
				}

				dexOptions.preDexLibraries = true
				lintOptions.abortOnError = false
			}
		} else if (moduleCurrent == moduleJava) {
			sourceCompatibility = JavaVersion.VERSION_1_8
			targetCompatibility = JavaVersion.VERSION_1_8
		}
	}

	if (project.hasProperty("kapt")) {
		kapt {
			useBuildCache = true
		}
	}
}

if (hasProperty("buildScan")) {
	buildScan {
		termsOfServiceUrl = "https://gradle.com/terms-of-service"
		termsOfServiceAgree = "yes"
	}
}

task clean(type: Delete) {
	delete rootProject.buildDir
}